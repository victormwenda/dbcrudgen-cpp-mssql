package ${PROJECT_PACKAGE}.${SERVICES_PACKAGE};

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ${PROJECT_PACKAGE}.${ENTITY_PACKAGE}.${ENTITY_CLASS};
import ${PROJECT_PACKAGE}.${MODEL_PACKAGE}.${MODEL_CLASS};
import ${PROJECT_PACKAGE}.${REQUEST_TABLE_PACKAGE}.*;
import ${PROJECT_PACKAGE}.${REPOSITORY_PACKAGE}.${REPOSITORY_CLASS};

@Service
public class ${SERVICE_CLASS} {

    @Autowired
    ${REPOSITORY_CLASS} ${REPOSITORY_OBJECT};

    public ${MODEL_CLASS} insert(${POST_REQUEST_CLASS} ${POST_REQUEST_OBJECT}) {

        ${ENTITY_CLASS} ${ENTITY_OBJECT} = new ${ENTITY_CLASS}();
        ${ENTITY_DATA_FROM_POST_REQUEST}

        ${REPOSITORY_OBJECT}.save(${ENTITY_OBJECT});

        ${MODEL_CLASS} ${MODEL_OBJECT} = new  ${MODEL_CLASS}();
        ${MODEL_DATA_FROM_ENTITY}

        return ${MODEL_OBJECT};
    }

    public ${MODEL_CLASS} find(${PK_COLUMN_DATATYPE} ${PK_OBJECT}) {

        Optional<${ENTITY_CLASS}> ${ENTITY_OBJECT}Opt = ${REPOSITORY_OBJECT}.findById(${PK_OBJECT});

        if(${ENTITY_OBJECT}Opt.isPresent()) {

            ${ENTITY_CLASS} ${ENTITY_OBJECT} = ${ENTITY_OBJECT}Opt.get();

            ${MODEL_CLASS} ${MODEL_OBJECT} = new  ${MODEL_CLASS}();
            ${MODEL_DATA_FROM_ENTITY}

            return ${MODEL_OBJECT};

        }

        return null;
    }

    public ${MODEL_CLASS} update (${PK_COLUMN_DATATYPE} ${PK_OBJECT}, ${PUT_REQUEST_CLASS} ${PUT_REQUEST_OBJECT}) {

        Optional<${ENTITY_CLASS}> ${ENTITY_OBJECT}Opt = ${REPOSITORY_OBJECT}.findById(${PK_OBJECT});

        if(${ENTITY_OBJECT}Opt.isPresent()) {

            ${ENTITY_CLASS} ${ENTITY_OBJECT} = ${ENTITY_OBJECT}Opt.get();
            ${ENTITY_DATA_FROM_PUT_REQUEST}

            ${REPOSITORY_OBJECT}.save(${ENTITY_OBJECT});

            ${MODEL_CLASS} ${MODEL_OBJECT} = new  ${MODEL_CLASS}();
            ${MODEL_DATA_FROM_ENTITY}

            return ${MODEL_OBJECT};

        }

        return null;
    }

    public ${MODEL_CLASS} delete(${PK_COLUMN_DATATYPE} ${PK_OBJECT}) {

        Optional<${ENTITY_CLASS}> ${ENTITY_OBJECT}Opt = ${REPOSITORY_OBJECT}.findById(${PK_OBJECT});

        if(${ENTITY_OBJECT}Opt.isPresent()) {

            ${ENTITY_CLASS} ${ENTITY_OBJECT} = ${ENTITY_OBJECT}Opt.get();
            ${REPOSITORY_OBJECT}.delete(${ENTITY_OBJECT});

            ${MODEL_CLASS} ${MODEL_OBJECT} = new  ${MODEL_CLASS}();
            ${MODEL_DATA_FROM_ENTITY}

            return ${MODEL_OBJECT};

        }

        return null;
    }
}
